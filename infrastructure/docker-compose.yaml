services:
  app:
    build:
      context: .
      dockerfile: infrastructure/Dockerfile
    image: shortener-app
    container_name: shortener-app
    ports:
      - "8000:8000"
    env_file:
      - env/backend.env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - shortener-network
    volumes:
      - ../backend/alembic/versions:/app/alembic/versions
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]

  migrations:
    image: shortener-app
    container_name: shortener-migrations
    env_file:
      - env/backend.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - alembic/versions:/app/alembic/versions
    networks:
      - shortener-network
    command: ["alembic", "upgrade", "head"]
    restart: "no"

  db:
    image: postgres:16-alpine
    env_file:
      - env/db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shortener-network
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB

volumes:
  postgres_data:

networks:
  shortener-network:
    driver: bridge 